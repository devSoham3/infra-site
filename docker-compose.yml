services:
  portfolio-site:
    image: ghcr.io/devsoham3/portfolio-site:latest
    container_name: portfolio-app
    restart: unless-stopped
    expose:
      - "3000"
    networks:
      - app-network

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-reverse-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      - MONITORING_USER=${MONITORING_USER}
      - MONITORING_PASSWORD=${MONITORING_PASSWORD}
    volumes:
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./certbot/conf:/etc/letsencrypt:ro"
      - "./certbot/www:/var/www/certbot:ro"
    depends_on:
      - portfolio-site
    networks:
      - app-network
      - monitoring-network

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - "./certbot/conf:/etc/letsencrypt"
      - "./certbot/www:/var/www/certbot"
    depends_on:
      - nginx
    networks:
      - app-network

# Monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    # privileged: true
    # devices:
    #   - /dev/kmsg
    volumes:
      - /:/rootfs:ro                     # Root filesystem access
      - /var/run:/var/run:ro             # Runtime socket access
      - /sys:/sys:ro                     # System metrics access
      - /var/lib/docker/:/var/lib/docker:ro  # Docker container access
      - /dev/disk/:/dev/disk:ro          # Disk metrics access
      - /etc/machine-id:/etc/machine-id:ro    # System UUID access
    expose:
      - "8080"
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - monitoring-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/host'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/host:ro
    ports:
      - "9100:9100"
    networks:
      - monitoring-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus'
      - '--web.route-prefix=/prometheus'
    expose:
      - "9090"
    ports:
      - "127.0.0.1:9090:9090"  # Only locally accessible
    depends_on:
      - cadvisor
      - node-exporter
    networks:
      - monitoring-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_SERVER_ROOT_URL=${GF_SERVER_ROOT_URL}
    expose:
      - "3000"
    ports:
      - "127.0.0.1:3001:3000"  # Only locally accessible
    networks:
      - monitoring-network

networks:
  app-network:
    driver: bridge
    # name: portfolio-network
  monitoring-network:
    driver: bridge
    # name: portfolio-monitor

volumes:
  grafana-storage: